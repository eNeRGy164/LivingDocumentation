name: Build, Test and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true

    steps:
    - name: Fetch all history for all tags and branches
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: 5.x

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.11

    - name: Setup .NET Core 2.1.x and 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          2.1.x
          6.0.x
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Restore dependencies
      run: dotnet restore -property:CheckEolTargetFramework=false

    - name: Build
      run: dotnet build --configuration Release --no-restore -property:CheckEolTargetFramework=false

    - name: Test
      run: dotnet test --configuration Release --no-restore --no-build --nologo --verbosity minimal -property:CheckEolTargetFramework=false --settings LivingDocumentation.runsettings --collect:"XPlat Code Coverage" --results-directory ${{ github.workspace }}/coverage

    - name: ReportGenerator to merge coverage files
      uses: danielpalme/ReportGenerator-GitHub-Action@5.0.0
      with:
        reports: coverage/**/*.xml
        targetdir: ${{ github.workspace }}
        reporttypes: lcov;Cobertura
        verbosity: Info

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.2.0
      with:
        filename: Cobertura.xml
        badge: true
        format: markdown
        output: both

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2.2.0
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: coveralls
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.info

    - name: Pack
      run: dotnet pack --configuration Release --no-restore --no-build --verbosity minimal -property:PackageVersion=${{ steps.gitversion.outputs.NuGetVersion }} --output ${{ github.workspace }}/packages

    - name: Upload Pull Request artifact
      uses: actions/upload-artifact@v2
      if: github.event_name == 'pull_request'
      with:
        name: NuGet Files
        path: packages/*
